<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python函数str()避免类型错误</title>
    <url>/2021/05/29/python%E5%87%BD%E6%95%B0str()%E9%81%BF%E5%85%8D%E7%B1%BB%E5%9E%8B%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<p>python中当输出需要拼接字符串(char)和整数(int)时，需要用到str()函数</p>
<span id="more"></span>

<p>如果编写如下代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">23</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Happy &quot;</span> + age +<span class="string">&quot;ed Birthday!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>会出现如下报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Happy &quot;</span> + age +<span class="string">&quot;ed Birthday!&quot;</span>)</span><br><span class="line">TypeError: can only concatenate <span class="built_in">str</span> (<span class="keyword">not</span> <span class="string">&quot;int&quot;</span>) to <span class="built_in">str</span></span><br></pre></td></tr></table></figure>

<p>这是一个<strong>类型错误，</strong>意味着python无法识别你使用的变量。</p>
<p>它不知道age是23还是字符2和3。</p>
<p>这个时候我们就需要用到str()函数来连接字符串和整数了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">23</span> </span><br><span class="line">message = <span class="string">&quot;Happy &quot;</span> + <span class="built_in">str</span>(age) + <span class="string">&quot;rd Birthday!&quot;</span> </span><br><span class="line"><span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line"><span class="comment">######</span></span><br><span class="line">Happy 23rd Birthday!</span><br></pre></td></tr></table></figure>

<p>在这里python就知道你用str()函数把23转换为字符串2和3了，但是原变量age未改变</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(age,<span class="built_in">int</span>))</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<p>isinstance(变量名，类型)函数就是检测变量类型的函数，如果匹配则返回true，不匹配则返回False</p>
]]></content>
      <categories>
        <category>python</category>
        <category>入门</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>str()</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>numpy数组基础</title>
    <url>/2021/05/29/numpy%E6%95%B0%E7%BB%84%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="NUMPY"><a href="#NUMPY" class="headerlink" title="NUMPY"></a>NUMPY</h1><h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><p>在numpy中，创建数组有很多种方法，例如如下的例子：</p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">sws_1 = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">sws_2 = np.array((<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line">sws_3 = np.arange(<span class="number">5</span>) </span><br><span class="line">sws_4 = np.linspace(<span class="number">0</span>, <span class="number">2</span> * np.pi, <span class="number">5</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sws_1[<span class="number">1</span>:<span class="number">3</span>])  <span class="comment"># 切片</span></span><br><span class="line"><span class="built_in">print</span>(sws_2)</span><br><span class="line"><span class="built_in">print</span>(sws_3)</span><br><span class="line"><span class="built_in">print</span>(sws_4)</span><br><span class="line"><span class="built_in">print</span>(sws_1[<span class="number">3</span>])</span><br><span class="line"> </span><br><span class="line"><span class="comment">######</span></span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br><span class="line">[<span class="number">0.</span>         <span class="number">1.57079633</span> <span class="number">3.14159265</span> <span class="number">4.71238898</span> <span class="number">6.28318531</span>]</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>np.arange()和np.linspace()方法可以参考<a href="https://blog.csdn.net/qq_53762188/article/details/117167379">python之range()、arange()和linspace()</a>这篇文章</p>
<p>切片的知识也可以参照<a href="https://blog.csdn.net/qq_53762188/article/details/117044059">python列表之部分列表——切片</a>，毕竟一维数组的切片还是一样的</p>
<h2 id="多维数组切片"><a href="#多维数组切片" class="headerlink" title="多维数组切片"></a>多维数组切片</h2><p>多维数组的切片要比一维数组复杂一点，但也只是一点点哦，让我们一起来看</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> arange</span><br><span class="line"> </span><br><span class="line">sws_1 = np.array([arange(<span class="number">0</span>, <span class="number">5</span>),</span><br><span class="line">                  arange(<span class="number">5</span>, <span class="number">10</span>),</span><br><span class="line">                  arange(<span class="number">10</span>, <span class="number">15</span>),</span><br><span class="line">                  arange(<span class="number">15</span>, <span class="number">20</span>),</span><br><span class="line">                  arange(<span class="number">20</span>, <span class="number">25</span>)])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sws_1[<span class="number">0</span>, <span class="number">1</span>:<span class="number">4</span>], <span class="string">&#x27;\n&#x27;</span>)  <span class="comment"># 在第0行进行1：4的切片</span></span><br><span class="line"><span class="built_in">print</span>(sws_1[<span class="number">1</span>:<span class="number">4</span>, <span class="number">0</span>], <span class="string">&#x27;\n&#x27;</span>)  <span class="comment"># 在第0列进行1：4的切片</span></span><br><span class="line"><span class="built_in">print</span>(sws_1[::<span class="number">2</span>, ::<span class="number">2</span>], <span class="string">&#x27;\n&#x27;</span>)  <span class="comment"># 从列、行的0开始，最后结束，分别步进为2取值</span></span><br><span class="line"><span class="built_in">print</span>(sws_1[:, <span class="number">1</span>], <span class="string">&#x27;\n&#x27;</span>)  <span class="comment"># 在第一列取所有元素</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">######</span></span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>] </span><br><span class="line"> </span><br><span class="line">[ <span class="number">5</span> <span class="number">10</span> <span class="number">15</span>] </span><br><span class="line"> </span><br><span class="line">[[ <span class="number">0</span>  <span class="number">2</span>  <span class="number">4</span>]</span><br><span class="line"> [<span class="number">10</span> <span class="number">12</span> <span class="number">14</span>]</span><br><span class="line"> [<span class="number">20</span> <span class="number">22</span> <span class="number">24</span>]] </span><br><span class="line"> </span><br><span class="line">[ <span class="number">1</span>  <span class="number">6</span> <span class="number">11</span> <span class="number">16</span> <span class="number">21</span>]</span><br></pre></td></tr></table></figure>

<h2 id="数组属性"><a href="#数组属性" class="headerlink" title="数组属性"></a>数组属性</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> arange</span><br><span class="line"> </span><br><span class="line">sws_1 = np.array([arange(<span class="number">0</span>, <span class="number">5</span>),</span><br><span class="line">                  arange(<span class="number">5</span>, <span class="number">10</span>),</span><br><span class="line">                  arange(<span class="number">10</span>, <span class="number">15</span>),</span><br><span class="line">                  arange(<span class="number">15</span>, <span class="number">20</span>),</span><br><span class="line">                  arange(<span class="number">20</span>, <span class="number">25</span>)])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(sws_1))  <span class="comment"># 数据结构类型，如list，dict等</span></span><br><span class="line"><span class="built_in">print</span>(sws_1.dtype)  <span class="comment"># 数据元素类型，如int，float等，还有位的大小</span></span><br><span class="line"><span class="built_in">print</span>(sws_1.size)  <span class="comment"># 统计元素个数</span></span><br><span class="line"><span class="built_in">print</span>(sws_1.shape)  <span class="comment"># 相当于数学里的（x，y，z）</span></span><br><span class="line"><span class="built_in">print</span>(sws_1.itemsize)  <span class="comment"># 每项占用的字节数，一个字节有8位</span></span><br><span class="line"><span class="built_in">print</span>(sws_1.ndim)  <span class="comment"># 数组的维度</span></span><br><span class="line"><span class="built_in">print</span>(sws_1.nbytes)  <span class="comment"># 数组中所有数据消耗的总字节</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">######</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">numpy</span>.<span class="title">ndarray</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">int32</span></span></span><br><span class="line"><span class="class">25</span></span><br><span class="line"><span class="class">(<span class="params"><span class="number">5</span>, <span class="number">5</span></span>)</span></span><br><span class="line"><span class="class">4</span></span><br><span class="line"><span class="class">2</span></span><br><span class="line"><span class="class">100</span></span><br></pre></td></tr></table></figure>

<h2 id="使用数组"><a href="#使用数组" class="headerlink" title="使用数组"></a>使用数组</h2><p>基本操作符+、-、*、/、**、&lt;、&gt;和dot()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> arange</span><br><span class="line"> </span><br><span class="line">sws_0 = arange(<span class="number">30</span>, <span class="number">55</span>)</span><br><span class="line">sws_0 = sws_0.reshape((<span class="number">5</span>, <span class="number">5</span>))  <span class="comment"># 让sws_0的所有元素按照（5，5）的维度排列</span></span><br><span class="line"> </span><br><span class="line">sws_1 = np.array([arange(<span class="number">0</span>, <span class="number">5</span>),</span><br><span class="line">                  arange(<span class="number">5</span>, <span class="number">10</span>),</span><br><span class="line">                  arange(<span class="number">10</span>, <span class="number">15</span>),</span><br><span class="line">                  arange(<span class="number">15</span>, <span class="number">20</span>),</span><br><span class="line">                  arange(<span class="number">20</span>, <span class="number">25</span>)])</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 对应索引位置的元素进行运算</span></span><br><span class="line"><span class="built_in">print</span>(sws_0 + sws_1)</span><br><span class="line"><span class="built_in">print</span>(sws_0 - sws_1)</span><br><span class="line"><span class="built_in">print</span>(sws_0 * sws_1)</span><br><span class="line"><span class="built_in">print</span>(sws_0 / sws_1)</span><br><span class="line"><span class="built_in">print</span>(sws_0 ** <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(sws_0 &lt; sws_1)</span><br><span class="line"><span class="built_in">print</span>(sws_0 &gt; sws_1)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 矩阵的乘法</span></span><br><span class="line"><span class="built_in">print</span>(sws_0.dot(sws_1))</span><br></pre></td></tr></table></figure>

<p>至于结果就不给大家发出来啦，毕竟太长了嘛，占篇幅，大家看着也疲劳，不过大家要自己动手试试哦</p>
<h2 id="数组特殊运算符"><a href="#数组特殊运算符" class="headerlink" title="数组特殊运算符"></a>数组特殊运算符</h2><p>如果要找数组中的一些特殊值，比如最大、最小或者求和呀，这里也可以很方便的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> arange</span><br><span class="line"> </span><br><span class="line">sws_0 = arange(<span class="number">10</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sws_0.<span class="built_in">sum</span>())</span><br><span class="line"><span class="built_in">print</span>(sws_0.<span class="built_in">min</span>())</span><br><span class="line"><span class="built_in">print</span>(sws_0.<span class="built_in">max</span>())</span><br><span class="line"><span class="built_in">print</span>(sws_0.cumsum())  </span><br><span class="line"><span class="comment"># 第一位先存入一个列表，然后第一位加第二位再存入列表，之后再加上第三位存入列表，以此类推</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">######</span></span><br><span class="line"><span class="number">45</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line">[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">3</span>  <span class="number">6</span> <span class="number">10</span> <span class="number">15</span> <span class="number">21</span> <span class="number">28</span> <span class="number">36</span> <span class="number">45</span>]</span><br></pre></td></tr></table></figure>

<h2 id="花式索引"><a href="#花式索引" class="headerlink" title="花式索引"></a>花式索引</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">sws_0 = np.arange(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">sws_1 = sws_0[[<span class="number">1</span>, <span class="number">5</span>, -<span class="number">1</span>]]  </span><br><span class="line"><span class="comment"># 用一个列表包装想要打印的元素的索引</span></span><br><span class="line">sws_2 = sws_0[sws_0 &gt;= <span class="number">6</span>]  </span><br><span class="line"><span class="comment"># 根据条件判断</span></span><br><span class="line">sws_3 = np.where(sws_0 &lt;= <span class="number">6</span>)  </span><br><span class="line"><span class="comment"># 返回满足条件的元素的索引</span></span><br><span class="line">sws_4 = np.where(sws_0 &gt;= <span class="number">6</span>)[<span class="number">0</span>]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(sws_0)</span><br><span class="line"><span class="built_in">print</span>(sws_1)</span><br><span class="line"><span class="built_in">print</span>(sws_2)</span><br><span class="line"><span class="built_in">print</span>(sws_3)</span><br><span class="line"><span class="built_in">print</span>(sws_4)</span><br><span class="line"> </span><br><span class="line"><span class="comment">######</span></span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">5</span> <span class="number">9</span>]</span><br><span class="line">[<span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">(array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], dtype=int64),)</span><br><span class="line">[<span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
        <category>numpy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>numpy</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
